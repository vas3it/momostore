---------------------------------------------------------------------------------
Используемые ресурсы практикума:
---------------------------------------------------------------------------------
Gitlab (два репозитория для хранения кода приложения и инфраструктуры)
Nexus (репозиторий для helm-chart-ов)
Sonarqube (тесты)
VM (для отладки)

---------------------------------------------------------------------------------
Заранее созданные ресурсы:
---------------------------------------------------------------------------------
YC (своё облако и каталог)
YC Object Storage (два бакета - для статики сайтаи хранения состояния Terraform)
Сертификат


---------------------------------------------------------------------------------
Порядок действий:
---------------------------------------------------------------------------------

---------------------------------------------------------------------------------
YC
---------------------------------------------------------------------------------
0. Установлена cli "yc" (для работы с YC)
1. Получите данные для аутентификации:
./yc iam key create \
  --service-account-id aje01rkvanj2723tuoil \
  --folder-name default \
  --output key.json
2. Создаём профиль для сервисного аккаунта
./yc config profile create sa-terraform
3. Задаём конфигурацию профиля
yc config set service-account-key key.json
yc config set cloud-id <идентификатор_облака>
yc config set folder-id <идентификатор_каталога>
----
Ссылки:
----
Справочник по CLI YC
https://cloud.yandex.ru/docs/cli/cli-ref/
Установка CLI YC
https://cloud.yandex.ru/docs/cli/quickstart
---------------------------------------------------------------------------------

---------------------------------------------------------------------------------
Terraform
---------------------------------------------------------------------------------
0. Экспортируем нужные переменные:
export YC_TOKEN=aje01rkvanj2723tuoil
export YC_CLOUD_ID=b1g5vaj7usev1602ttda
export YC_FOLDER_ID=b1gm1ae6uts1pr387al2

1. Запускаем создание кластера kubernetes с необходимыми нам параметрами:
terraform apply

2. Проверяем подключение к кластеру:
kubectl cluster-info

----
Ссылки:
----
Настройка Terraform
https://cloud.yandex.ru/docs/tutorials/infrastructure-management/terraform-quickstart#install-terraform
---------------------------------------------------------------------------------
Kubeconfig
---------------------------------------------------------------------------------
3. Конфигурируем kubeconfig, предварительно получив id кластера:
yc managed-kubernetes cluster list
yc managed-kubernetes cluster get-credentials cat8h1i98gv0d9ou7icg --external
4. Добавляем namespace в kubeconfig:
contexts:
- context:
    cluster: yc-managed-k8s-cated1oono4hmmenc7q4
    namespace: momo-vas

---------------------------------------------------------------------------------
ALB
---------------------------------------------------------------------------------	
5. Генерируем статический ключ дл sa ingress
cd ~/yandex-cloud/bin
yc iam key create \
  --service-account-name ingressaccount \
  --format=json --output ingressaccount-key.json
6. Узнаём ID кластера:
yc managed-kubernetes cluster list

7. Устанавливаем ингресс-контроллер ALB (не забываем поменять id кластера)
export HELM_EXPERIMENTAL_OCI=1 && \
cat ingressaccount-key.json | helm registry login cr.yandex --username 'json_key' --password-stdin && \
helm pull oci://cr.yandex/yc-marketplace/yandex-cloud/yc-alb-ingress/yc-alb-ingress-controller-chart \
  --version v0.1.16 \
  --untar && \
helm install \
  --namespace momo-vas \
  --create-namespace \
  --set folderId=b1gm1ae6uts1pr387al2 \
  --set clusterId=cat8h1i98gv0d9ou7icg \
  --set-file saKeySecretKey=ingressaccount-key.json \
  yc-alb-ingress-controller ./yc-alb-ingress-controller-chart/
  
8. Проверяем наличие pod-ов с ингресс-контроллером в namespace:
kubectl --namespace momo-vas get pods  

9. Узнаём id: 
subnets (воркер нод):
yc vpc subnets list

for-k8s-nodegroup:
yc vpc security-group list

и редактируем файл ingress.yaml

10. Проверяем статус создания контроллера ALB (создаётся от5 до 10 минут).
yc application-load-balancer load-balancer list

11. Смотрим айпишник ингресса и меняем dns-записи у регистратора.
kubectl get ingress

---------------------------------------------------------------------------------
momo-store deploy
---------------------------------------------------------------------------------
12. Создаём секрет для доступа docker-registry
kubectl create secret docker-registry regcred --docker-server=gitlab.praktikum-services.ru:5050/v.surin/momostore/ --docker-username=v.surin --docker-password=*A6qy{E2

13.Ставим
helm install momo-store ./momo-store

14. Либо обновляем
helm upgrade momo-store ./momo-store
