variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
#  - build-for-test
  - test 
  - build-image-for-release
##  - deploy
##  - ver_f_downstream
##  - notify 

sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - >
      sonar-scanner
      -Dsonar.sources=. 
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN}
      -Dsonar.projectName="11_vsurin_momof"     

spotbugs-sast:
  stage: test
  script:
    - cd frontend

build-frontend-docker-image:
  stage: build-image-for-release
  image: alpine:latest
  before_script:
    - apk add docker docker-compose curl
    - until docker info; do sleep 1; done
    # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker-compose build frontend
    - docker-compose push frontend

##frontend_argo_deploy:
##  stage: deploy

##for_helmchart_version_update:  
##  stage: ver_f_downstream  

##copy-compose-files:
##  image: alpine:latest
##  stage: deploy

##deploy-frontend:
##  stage: deploy
      
##slack-notification-frontend:
##  stage: notify
