variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
  - test 
  - build-image-for-release
  - update-version-chart

##vas: тест по кнопке, так как в сонаре ошибки. По вебинару - ошибки в коде - не наша проблема)
sonarqube-frontend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - >
      sonar-scanner
      -Dsonar.sources=. 
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN}
      -Dsonar.projectName="11_vsurin_momof"     
  when: manual    

spotbugs-sast:
  stage: test
  script:
    - cd frontend

build-frontend-docker-image:
  stage: build-image-for-release
  image: alpine:latest
  before_script:
    - apk add docker docker-compose curl
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker-compose build frontend
    - docker-compose push frontend

update-version-chart:
  stage: update-version-chart
  image: alpine:latest
  before_script:
    - apk update && apk add bash curl git openssh-client docker
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY    
  script:
    #Настраиваем CLI YC и kubeconfig (неинтерактивный режим)
    - /bin/bash -s < ./helmchart_ver2.sh
