variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  
#include:
#  - project: 'templates/ci'
#    file: 'DockerInDockerTemplate.yml'
    
stages:
#  - build-for-test
  - test 
#  - build-image-for-release
#  - deploy
#  - ver_f_downstream
#  - deploy
#  - notify  

#build-backend-artefact-for-test:  
#  stage: build-for-test
#  script:
#    - cd backend
#    - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -Dversion.application=${VERSION}
#     - mvn package -Dversion.application=${VERSION} -Dmaven.repo.local=${MAVEN_REPO_PATH}
#  rules: # rules и only в данных случаях взаимозаменяемы   
#     - changes:
#           - backend/*  
#  artifacts:
#    paths:
#      - backend/target/sausage-store-${VERSION}.jar
#      - ${CI_PROJECT_DIR}/.m2/
#  cache:
#    key: backend
#    paths:
#      - ${CI_PROJECT_DIR}/.m2/repository # для хранения зависимостей бэкенда  

sonarqube-backend-sast:
  stage: test
#  image: maven:3.8-openjdk-16
  image: sonarsource/sonar-scanner-cli:latest
#  image: cr.yandex/crp4v5843a482vqmajv8/maven:3.8.2-openjdk-16
  script:
    - cd backend
    - >
      sonar-scanner
      -Dsonar.sources=.
      -Dsonar.projectKey=${SONAR_PROJECT_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN}
      -Dsonar.projectName="11_vsurin_momob"   

spotbugs-sast:
  stage: test
  script:
    - cd backend #костыль, но rules не получилось настроить, видимо надо тесты в отедльный .yml выносить - зато галка зеленая)

#  variables:
#    COMPILE: "false"
#    SAST_JAVA_VERSION: 11
#    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository

##build-backend-docker-image:
##  stage: build-image-for-release
#  image: docker:20.10.12-dind-rootless  

##backend_argo_deploy:
##  stage: deploy

##for_helmchart_version_update:  
##  stage: ver_f_downstream

##copy-compose-files:
##  image: alpine:latest
##  stage: deploy

##deploy-backend:
##  stage: deploy

##slack-notification-backend:
##  stage: notify
