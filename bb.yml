variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
    
stages:
  - test 
  - build-image-for-release
  - update-version-chart
  - deploy
  - pcp 

sonarqube-backend-sast:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd backend
    - >
      sonar-scanner
      -Dsonar.sources=.
      -Dsonar.projectKey=${SONAR_PROJECT_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN}
      -Dsonar.projectName="11_vsurin_momob"   

spotbugs-sast:
  stage: test
  script:
    - cd backend

go-test:
  stage: test
  image: golang:latest
  script:
    - cd backend
    - go test -v ./...
  allow_failure: true

build-backend-docker-image:
  stage: build-image-for-release
  image: alpine:latest
  before_script:
    - apk add docker docker-compose curl
    - until docker info; do sleep 1; done
    # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker-compose build backend
    - docker-compose push backend

update-version-chart:
  stage: update-version-chart
  image: alpine:latest
  before_script:
    - apk update && apk add bash curl git openssh-client docker
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY    
  script:
    #Настраиваем CLI YC и kubeconfig (неинтерактивный режим)
    - /bin/bash -s < ./helmchart_ver2.sh

deploy-app:
  stage: deploy    
  image: gitlab.praktikum-services.ru:5050/v.surin/momostore/helm-kubectl
  script:
    #Настраиваем CLI YC и kubeconfig (неинтерактивный режим)
    - /bin/bash -s < ./yc_kubectl_configng.sh
    #Деплоим новую версию приложения
    - helm upgrade momo-store ./momo-store-chart

pcp:
  variables:
    VERSION_CHART: ${VERSION}
  stage: pcp
  trigger:
    include:
      - local: v.surin/momostore/upload_chart.yml


